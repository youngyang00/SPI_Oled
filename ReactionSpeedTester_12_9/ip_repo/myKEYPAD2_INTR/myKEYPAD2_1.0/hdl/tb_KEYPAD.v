module KEYPAD_tb;

    // ?ï¿½ï¿½?ï¿½ï¿½?ï¿½ï¿½ï¿?? ?ï¿½ï¿½?ï¿½ï¿½ ?ï¿½ï¿½?ï¿½ï¿½ ï¿?? ì¶œë ¥ ?ï¿½ï¿½?ï¿½ï¿½ ?ï¿½ï¿½?ï¿½ï¿½
    reg           iclk;
    reg           inrest;
    reg   [3:0]   iROW;
    reg   [4:0]   cnt;
    wire  [3:0]   oCOL;
    wire  [15:0]  oKEYST;
    wire  [7:0]   oKEYNUM;

    // DUT (Device Under Test) ?ï¿½ï¿½?ï¿½ï¿½?ï¿½ï¿½?ï¿½ï¿½?ï¿½ï¿½
    KEYPAD uut (
        .iclk(iclk),
        .inrest(inrest),
        .iROW(iROW),
        .oCOL(oCOL),
        .oKEYST(oKEYST),
        .oKEYNUM(oKEYNUM)
    );

    // ?ï¿½ï¿½?ï¿½ï¿½ ?ï¿½ï¿½?ï¿½ï¿½ (50MHz ï¿???ï¿½ï¿½, ì£¼ê¸° 20ns)
    initial begin
        iclk = 0;
        forever #10 iclk = ~iclk;
    end

    // ?ï¿½ï¿½?ï¿½ï¿½?ï¿½ï¿½ ?ï¿½ï¿½?ï¿½ï¿½ë¦¬ì˜¤
    initial begin
        // ì´ˆê¸°?ï¿½ï¿½
        cnt <= 5'd0;
        inrest = 0;
        iROW = 4'b1111;
        
        // ë¦¬ì…‹ ?ï¿½ï¿½?ï¿½ï¿½
        #50;
        inrest = 1;
        #1000000
        iROW = 4'b1011;

    end
    
/*always @(oCOL) begin
    if (oCOL == 4'b1101) begin
        if (cnt < 10) begin
            iROW <= 4'b1110;  // oCOLï¿½ï¿½ Æ¯ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ iROWï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½
            cnt <= cnt + 1;
        end
        else begin
            iROW <= 4'b1111;
        end
    end 
    else begin
        iROW <= 4'b1111;  // ï¿½âº» ï¿½ï¿½ï¿½Â·ï¿½ ï¿½ï¿½ï¿½ï¿½
    end
end
*/

endmodule
